esphome:
  name: wakeword
  friendly_name: Wake Word
    # PlatformIO build options
  platformio_options:
    build_flags: -DBOARD_HAS_PSRAM
    board_build.arduino.memory_type: qio_opi
    board_build.f_flash: 80000000L
    board_build.flash_mode: qio 


esp32:
  board: esp32-s3-devkitc-1 # esp32s3box # Use the specific board type if available, or a generic s3 like esp32-s3-devkitc-1
  framework:
    type: esp-idf # Required for the S3 and I2S audio input

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "bgbT2Fy+N8EeTrCh/6NwFjUkbH/agNNoXLnwQuZbyLs="

ota:
  - platform: esphome
    password: "9251bfbf7efb56086ecdb31b68dac636"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Optional: Assign a static IP if desired
  # manual_ip:
  #   static_ip: 192.168.1.150
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Wakeword Fallback Hotspot"
    password: "M08ud6ddwtQp"

captive_portal:

# Enable Web Server (optional)
# web_server:
#   port: 80
# Configuration for the status LED light
light:
  - platform: status_led
    id: light0
    name: "Voice Assistant State"
    pin:
      number: GPIO21
      inverted: true

      
# MSM261D3526H1CPM MEMs Microphone https://files.seeedstudio.com/wiki/XIAO-BLE/mic-MSM261D3526H1CPM-ENG.pdf
# Pins 41 PDM Data, 42 Clock
# 16KHz 16 bits

i2s_audio:
  i2s_lrclk_pin: 42
  #i2s_lrclk_pin: GPIO46 # Note: labeled as "useless"
  #i2s_bclk_pin: GPIO42  
 
# Example configuration entry
 
microphone:
  - platform: i2s_audio
    id: external_mic
    adc_type: external
    i2s_din_pin: GPIO41
    pdm: true
    sample_rate: 16000
    bits_per_sample: 16bit
    channel: left
 
 
# Voice Assistant component - Connects the audio stream to the Home Assistant Voice Assistant integration
voice_assistant:
  microphone: external_mic
  use_wake_word: True
  noise_suppression_level: 2

switch:
  - platform: template
    name: capture
    optimistic: True
    id: capture
    turn_on_action:
      - voice_assistant.start_continuous
    turn_off_action:
      - voice_assistant.stop:      

# Github shorthand URL
micro_wake_word:
  models:
    # Shorthand
    #- model: okay_nabu
    - model: hey_jarvis
    # external file
    #- model: github://esphome/micro-wake-word-models/models/v2/okay_nabu.json

  # This action is triggered when the wake word is detected
  on_wake_word_detected:
    - voice_assistant.start: # Tell Home Assistant to start a voice session using this device

# Configuration for the binary sensor (Boot Switch)
binary_sensor:    
  - platform: gpio
    pin: 
      number: GPIO2
      mode:
        input: true
        pullup: true
    name: Boot Switch
    internal: true
    on_press:
      - voice_assistant.start:
      - light.turn_off: light0
    on_release:
      - voice_assistant.stop:
      - light.turn_on: light0 
